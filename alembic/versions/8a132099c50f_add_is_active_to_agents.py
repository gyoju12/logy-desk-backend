"""add_is_active_to_agents

Revision ID: 8a132099c50f
Revises: d3f92ea9645e
Create Date: 2025-07-12 21:35:05.423713

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8a132099c50f"
down_revision: Union[str, None] = "d3f92ea9645e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum type first (use lowercase to match existing data)
    op.execute("CREATE TYPE agenttype AS ENUM ('main', 'sub')")

    # Add the is_active column with a default value of True
    op.add_column(
        "agents",
        sa.Column("is_active", sa.Boolean(), nullable=True, server_default="t"),
    )

    # First, ensure all existing agent_type values are lowercase to match our new enum
    op.execute(
        """
        UPDATE agents 
        SET agent_type = LOWER(agent_type)
        WHERE agent_type != LOWER(agent_type)
    """
    )

    # Now alter the column to use the new enum type
    op.alter_column(
        "agents",
        "agent_type",
        type_=sa.Enum("main", "sub", name="agenttype"),
        postgresql_using="agent_type::agenttype",
        existing_type=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    op.alter_column(
        "agents",
        "temperature",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=True,
    )
    op.alter_column("agents", "system_prompt", existing_type=sa.TEXT(), nullable=True)
    op.drop_constraint(
        "chat_sessions_agent_id_fkey", "chat_sessions", type_="foreignkey"
    )
    op.drop_column("chat_sessions", "agent_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "chat_sessions",
        sa.Column("agent_id", sa.UUID(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "chat_sessions_agent_id_fkey", "chat_sessions", "agents", ["agent_id"], ["id"]
    )
    op.alter_column("agents", "system_prompt", existing_type=sa.TEXT(), nullable=False)
    op.alter_column(
        "agents",
        "temperature",
        existing_type=sa.DOUBLE_PRECISION(precision=53),
        nullable=False,
    )

    # Convert enum to string (lowercase) before dropping the enum
    op.alter_column(
        "agents",
        "agent_type",
        type_=sa.VARCHAR(length=10),
        existing_type=sa.Enum("main", "sub", name="agenttype"),
        postgresql_using="agent_type::text",
        existing_nullable=False,
    )

    # Drop the enum type
    op.execute("DROP TYPE agenttype")

    # Drop the is_active column
    op.drop_column("agents", "is_active")
    # ### end Alembic commands ###
