name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'staging' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/logy-desk-backend
        tags: |
          type=sha,format=long
          type=ref,event=branch
          type=ref,event=tag
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Set up Docker Compose
      run: |
        curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
        chmod +x docker-compose
        sudo mv docker-compose /usr/local/bin/docker-compose
        
    - name: Deploy to server
      if: github.event_name != 'pull_request'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        DOCKER_COMPOSE: ${{ toJson(secrets.DOCKER_COMPOSE) }}
      run: |
        # Setup SSH
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        
        # Create .env file from secrets
        echo "$DOCKER_COMPOSE" > .env
        
        # Copy files to server
        scp -r .env docker-compose.yml ${{ secrets.SSH_HOST }}:/opt/logy-desk/
        
        # Deploy on server
        ssh ${{ secrets.SSH_HOST }} "
          cd /opt/logy-desk
          docker-compose pull
          docker-compose up -d --force-recreate
          docker system prune -f
        "
