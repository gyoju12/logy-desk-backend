name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools>=61.0.0 wheel setuptools_scm[toml]>=6.0 build
        
    - name: Build and install in development mode
      run: |
        pip install --no-deps -e .
        pip install -r <(pip list --format=freeze | grep -v '^\-e ' | cut -d= -f1 | grep -v '^pip$' | grep -v '^setuptools$' | grep -v '^wheel$')
        pip install -e '.[test]'
        
    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql+asyncpg://test_user:test_password@localhost:5432/test_db" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "ENVIRONMENT=test" >> $GITHUB_ENV
        
    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true
        
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools>=61.0.0 wheel setuptools_scm[toml]>=6.0 build
        
    - name: Build and install in development mode
      run: |
        pip install --no-deps -e .
        pip install -r <(pip list --format=freeze | grep -v '^\-e ' | cut -d= -f1 | grep -v '^pip$' | grep -v '^setuptools$' | grep -v '^wheel$')
        pip install -e '.[dev]'
        
    - name: Run black
      run: black --check .
      
    - name: Run isort
      run: isort --check-only .
      
    - name: Run flake8
      run: flake8 .
      
    - name: Run mypy
      run: mypy .
